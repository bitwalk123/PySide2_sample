#!/usr/bin/env python
# coding: utf-8
# reference
# https://stackoverflow.com/questions/53252404/how-to-set-qlabel-using-base64-string-or-byte-array

import sys
from PySide2.QtCore import QByteArray
from PySide2.QtGui import QPixmap
from PySide2.QtWidgets import (
    QApplication,
    QLabel,
    QVBoxLayout,
    QWidget,
)


class Example(QWidget):
    def __init__(self):
        super().__init__()
        self.initUI()
        self.setWindowTitle("Label")
        self.show()

    def initUI(self):
        vbox = QVBoxLayout()
        self.setLayout(vbox)

        lab = QLabel()
        lab.setPixmap(self.get_pixmap())
        vbox.addWidget(lab)

    def get_pixmap(self):
        base64data = b'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'
        byte_array = QByteArray.fromBase64(base64data)
        pixmap = QPixmap()
        pixmap.loadFromData(byte_array)

        return pixmap


def main():
    app = QApplication(sys.argv)
    ex = Example()
    sys.exit(app.exec_())


if __name__ == '__main__':
    main()
