#!/usr/bin/env python
# coding: utf-8
# reference
# https://stackoverflow.com/questions/53252404/how-to-set-qlabel-using-base64-string-or-byte-array

import sys
from bz2 import decompress
from PySide2.QtCore import QByteArray
from PySide2.QtGui import QPixmap
from PySide2.QtWidgets import (
    QApplication,
    QLabel,
    QVBoxLayout,
    QWidget,
)


class Example(QWidget):
    def __init__(self):
        super().__init__()
        self.initUI()
        self.setWindowTitle('Label')
        self.show()

    def initUI(self):
        vbox = QVBoxLayout()
        self.setLayout(vbox)

        lab = QLabel()
        lab.setPixmap(self.get_pixmap())
        vbox.addWidget(lab)

    def get_pixmap(self):
        base64data = b''
        byte_array = decompress(QByteArray.fromBase64(base64data))
        pixmap = QPixmap()
        pixmap.loadFromData(byte_array)

        return pixmap


def main():
    app = QApplication(sys.argv)
    ex = Example()
    sys.exit(app.exec_())


if __name__ == '__main__':
    main()
